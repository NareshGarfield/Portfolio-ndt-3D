/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
"use client";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const Wizard = React.memo(function Wizard(props) {
  // Use React.memo for performance optimization
  const { nodes, materials } = useGLTF("/models/shadowking-transformed.glb");

  const modelRef = useRef();

  useFrame((state) => {
    modelRef.current.position.y =
      -2.4 + Math.sin(state.clock.elapsedTime) * 0.15;
  });

  return (
    <group
      {...props}
      dispose={null}
      ref={modelRef}
      position={[0,-1, 0]}
      scale={[2.2, 2.2, 2.2]}
      // rotation={[0.25, 0, 0]}
    >
      <primitive object={nodes._rootJoint} />
        <skinnedMesh
          name="Object_158"
          geometry={nodes.Object_158.geometry}
          material={materials.Silver}
          skeleton={nodes.Object_158.skeleton}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={0.1}
        />
        <skinnedMesh
          name="Object_159"
          geometry={nodes.Object_159.geometry}
          material={materials.Pants}
          skeleton={nodes.Object_159.skeleton}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={0.1}
        />
    </group>
  );
});

export default Wizard;
useGLTF.preload("/models/shadowking-transformed.glb");
